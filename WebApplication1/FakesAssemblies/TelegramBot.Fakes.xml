<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TelegramBot.Fakes</name>
    </assembly>
    <members>
        <member name="T:TelegramBot.Fakes.ShimTelegramBot">
            <summary>Shim type of TelegramBot.TelegramBot</summary>
        </member>
        <member name="M:TelegramBot.Fakes.ShimTelegramBot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TelegramBot.Fakes.ShimTelegramBot.#ctor(TelegramBot.TelegramBot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TelegramBot.Fakes.ShimTelegramBot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:TelegramBot.Fakes.ShimTelegramBot.AllInstances.SendMessageAsyncStringStringString">
            <summary>Sets the Shim of TelegramBot.SendMessageAsync(TelegramBot this, String telegramBotToken, String channel, String message)</summary>
        </member>
        <member name="M:TelegramBot.Fakes.ShimTelegramBot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TelegramBot.Fakes.ShimTelegramBot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TelegramBot.Fakes.ShimTelegramBot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TelegramBot.Fakes.ShimTelegramBot.Bind(TelegramBot.ITelegramBot)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:TelegramBot.Fakes.ShimTelegramBot.Constructor">
            <summary>Sets the Shim of TelegramBot.TelegramBot(TelegramBot this)</summary>
        </member>
        <member name="P:TelegramBot.Fakes.ShimTelegramBot.SendMessageAsyncStringStringString">
            <summary>Sets the Shim of TelegramBot.SendMessageAsync(TelegramBot this, String telegramBotToken, String channel, String message)</summary>
        </member>
        <member name="T:TelegramBot.Fakes.StubITelegramBot">
            <summary>Stub type of TelegramBot.ITelegramBot</summary>
        </member>
        <member name="M:TelegramBot.Fakes.StubITelegramBot.#ctor">
            <summary>Initializes a new instance of type StubITelegramBot</summary>
        </member>
        <member name="F:TelegramBot.Fakes.StubITelegramBot.SendMessageAsyncStringStringString">
            <summary>Sets the stub of ITelegramBot.SendMessageAsync(ITelegramBot this, String telegramBotToken, String channel, String message)</summary>
        </member>
        <member name="M:TelegramBot.Fakes.StubITelegramBot.TelegramBot#ITelegramBot#SendMessageAsync(System.String,System.String,System.String)">
            <summary>Sets the Stub of ITelegramBot.SendMessageAsync(ITelegramBot this, String telegramBotToken, String channel, String message)</summary>
        </member>
        <member name="T:TelegramBot.Fakes.StubTelegramBot">
            <summary>Stub type of TelegramBot.TelegramBot</summary>
        </member>
        <member name="M:TelegramBot.Fakes.StubTelegramBot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TelegramBot.Fakes.StubTelegramBot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TelegramBot.Fakes.StubTelegramBot.InitializeStub">
            <summary>Initializes a new instance of type StubTelegramBot</summary>
        </member>
        <member name="P:TelegramBot.Fakes.StubTelegramBot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TelegramBot.Fakes.StubTelegramBot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
